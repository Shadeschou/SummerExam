import { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from "@angular/common/http";
import { JwtHelperService } from "./jwthelper.service";
import { Observable } from "rxjs";
import * as ɵngcc0 from '@angular/core';
export declare class JwtInterceptor implements HttpInterceptor {
    jwtHelper: JwtHelperService;
    tokenGetter: (request?: HttpRequest<any>) => string | null | Promise<string | null>;
    headerName: string;
    authScheme: string;
    whitelistedDomains: Array<string | RegExp>;
    blacklistedRoutes: Array<string | RegExp>;
    throwNoTokenError: boolean;
    skipWhenExpired: boolean;
    standardPorts: string[];
    constructor(config: any, jwtHelper: JwtHelperService);
    isWhitelistedDomain(request: HttpRequest<any>): boolean;
    isBlacklistedRoute(request: HttpRequest<any>): boolean;
    handleInterception(token: string | null, request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;
    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<JwtInterceptor>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<JwtInterceptor>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiand0LmludGVyY2VwdG9yLmQudHMiLCJzb3VyY2VzIjpbImp3dC5pbnRlcmNlcHRvci5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBR0E7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwUmVxdWVzdCwgSHR0cEhhbmRsZXIsIEh0dHBFdmVudCwgSHR0cEludGVyY2VwdG9yIH0gZnJvbSBcIkBhbmd1bGFyL2NvbW1vbi9odHRwXCI7XG5pbXBvcnQgeyBKd3RIZWxwZXJTZXJ2aWNlIH0gZnJvbSBcIi4vand0aGVscGVyLnNlcnZpY2VcIjtcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tIFwicnhqc1wiO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgSnd0SW50ZXJjZXB0b3IgaW1wbGVtZW50cyBIdHRwSW50ZXJjZXB0b3Ige1xuICAgIGp3dEhlbHBlcjogSnd0SGVscGVyU2VydmljZTtcbiAgICB0b2tlbkdldHRlcjogKHJlcXVlc3Q/OiBIdHRwUmVxdWVzdDxhbnk+KSA9PiBzdHJpbmcgfCBudWxsIHwgUHJvbWlzZTxzdHJpbmcgfCBudWxsPjtcbiAgICBoZWFkZXJOYW1lOiBzdHJpbmc7XG4gICAgYXV0aFNjaGVtZTogc3RyaW5nO1xuICAgIHdoaXRlbGlzdGVkRG9tYWluczogQXJyYXk8c3RyaW5nIHwgUmVnRXhwPjtcbiAgICBibGFja2xpc3RlZFJvdXRlczogQXJyYXk8c3RyaW5nIHwgUmVnRXhwPjtcbiAgICB0aHJvd05vVG9rZW5FcnJvcjogYm9vbGVhbjtcbiAgICBza2lwV2hlbkV4cGlyZWQ6IGJvb2xlYW47XG4gICAgc3RhbmRhcmRQb3J0czogc3RyaW5nW107XG4gICAgY29uc3RydWN0b3IoY29uZmlnOiBhbnksIGp3dEhlbHBlcjogSnd0SGVscGVyU2VydmljZSk7XG4gICAgaXNXaGl0ZWxpc3RlZERvbWFpbihyZXF1ZXN0OiBIdHRwUmVxdWVzdDxhbnk+KTogYm9vbGVhbjtcbiAgICBpc0JsYWNrbGlzdGVkUm91dGUocmVxdWVzdDogSHR0cFJlcXVlc3Q8YW55Pik6IGJvb2xlYW47XG4gICAgaGFuZGxlSW50ZXJjZXB0aW9uKHRva2VuOiBzdHJpbmcgfCBudWxsLCByZXF1ZXN0OiBIdHRwUmVxdWVzdDxhbnk+LCBuZXh0OiBIdHRwSGFuZGxlcik6IE9ic2VydmFibGU8SHR0cEV2ZW50PGFueT4+O1xuICAgIGludGVyY2VwdChyZXF1ZXN0OiBIdHRwUmVxdWVzdDxhbnk+LCBuZXh0OiBIdHRwSGFuZGxlcik6IE9ic2VydmFibGU8SHR0cEV2ZW50PGFueT4+O1xufVxuIl19